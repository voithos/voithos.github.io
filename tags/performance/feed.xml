<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance on voithos.io</title>
    <link>https://voithos.io/tags/performance/</link>
    <description>Recent content in Performance on voithos.io</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Aug 2024 22:46:32 -0700</lastBuildDate>
    <atom:link href="https://voithos.io/tags/performance/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AsyncTask Timing</title>
      <link>https://voithos.io/articles/asynctask-timing/</link>
      <pubDate>Wed, 14 Aug 2024 22:46:32 -0700</pubDate>
      <guid>https://voithos.io/articles/asynctask-timing/</guid>
      <description>Unreal&amp;rsquo;s AsyncTask API is great when you want to do some heavier processing without blocking the game thread, or in general when you need to specifically control execution on other threads (such as for RHI work).1 Often, you&amp;rsquo;ll need to switch between different threads while performing the work (like switching to the game thread to create UObjects).&#xA;The ability to schedule async tasks begs the question: when do these tasks actually begin executing?</description>
    </item>
    <item>
      <title>Surprisingly Slow NaNs</title>
      <link>https://voithos.io/articles/surprisingly-slow-nans/</link>
      <pubDate>Thu, 08 Aug 2024 21:22:54 -0700</pubDate>
      <guid>https://voithos.io/articles/surprisingly-slow-nans/</guid>
      <description>A while ago, I had to debug a strange performance issue in an in-house engine I was using, and I was quite surprised when I discovered the cause. The tl;dr is that it involved some unexpected but innocuous-seeming NaNs that ended up tanking the performance, and not just from the fact that operations involving NaNs are much slower than finite floats on some architectures.&#xA;Story time!&#xA;The code in question was part of the movement / interaction system, and involved performing a few raycasts against the collision system to find a reference point for movement.</description>
    </item>
    <item>
      <title>Fast Chaos Collision Toggling</title>
      <link>https://voithos.io/articles/fast-chaos-collision-toggling/</link>
      <pubDate>Mon, 22 May 2023 23:21:17 -0700</pubDate>
      <guid>https://voithos.io/articles/fast-chaos-collision-toggling/</guid>
      <description>A few weeks ago I investigated an interesting physics-related performance issue, specific to UE5&amp;rsquo;s new Chaos physics engine.&#xA;The code I was working on managed a large number of UStaticMeshComponents (essentially, it&amp;rsquo;s a custom hierarchical level-of-detail system) and would frequently need to toggle visibility and collision shapes per tick. There were some cases where we seemed to be going over our frame budget, so I took a profile via Unreal Insights:</description>
    </item>
  </channel>
</rss>
