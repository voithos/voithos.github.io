<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ue5 on voithos.io</title>
    <link>https://voithos.io/tags/ue5/</link>
    <description>Recent content in Ue5 on voithos.io</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Sep 2024 16:46:05 -0700</lastBuildDate>
    <atom:link href="https://voithos.io/tags/ue5/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fancier Ticking in Unreal</title>
      <link>https://voithos.io/articles/fancier-ticking-in-unreal/</link>
      <pubDate>Mon, 02 Sep 2024 16:46:05 -0700</pubDate>
      <guid>https://voithos.io/articles/fancier-ticking-in-unreal/</guid>
      <description>Unreal&amp;rsquo;s ticking system is a core part of the engine, fulfilling the role of the classic game loop. Despite being so central, though, I&amp;rsquo;ve found it to be a bit complex, with lots of flags and knobs that aren&amp;rsquo;t always very well documented. And while there are several resources that explain how to do basic ticking, there are a few fancier techniques that don&amp;rsquo;t have as much coverage, which this page aims to help explain.</description>
    </item>
    <item>
      <title>Building Unreal Engine From Source for VSCode</title>
      <link>https://voithos.io/articles/building-unreal-engine-from-source-for-vscode/</link>
      <pubDate>Sun, 25 Aug 2024 20:59:17 -0700</pubDate>
      <guid>https://voithos.io/articles/building-unreal-engine-from-source-for-vscode/</guid>
      <description>I spent a bit of time today compiling Unreal Engine from source using VSCode, and while the process was mostly straightforward, there were a few hiccups that took me a second to work around. This page aims to document a couple tricks to make this easier!&#xA;Note that using VSCode is generally the less-trodden path; if you&amp;rsquo;re alright with using Visual Studio Community Edition or have access to Visual Studio Professional (or even JetBrains Rider, my favorite Unreal IDE), those will typically be easier to set up.</description>
    </item>
    <item>
      <title>AsyncTask Timing</title>
      <link>https://voithos.io/articles/asynctask-timing/</link>
      <pubDate>Wed, 14 Aug 2024 22:46:32 -0700</pubDate>
      <guid>https://voithos.io/articles/asynctask-timing/</guid>
      <description>Unreal&amp;rsquo;s AsyncTask API is great when you want to do some heavier processing without blocking the game thread, or in general when you need to specifically control execution on other threads (such as for RHI work).1 Often, you&amp;rsquo;ll need to switch between different threads while performing the work (like switching to the game thread to create UObjects).&#xA;The ability to schedule async tasks begs the question: when do these tasks actually begin executing?</description>
    </item>
    <item>
      <title>Unreal Debugging</title>
      <link>https://voithos.io/articles/unreal-debugging/</link>
      <pubDate>Sun, 21 Jul 2024 22:26:16 -0700</pubDate>
      <guid>https://voithos.io/articles/unreal-debugging/</guid>
      <description>As a large and mature engine, Unreal provides a suite of debugging systems and tools to aid development, which go hand-in-hand with your standard C++ debugger. This page aims to give an incomplete and mostly unordered whirlwind tour of some of the more useful tools I&amp;rsquo;ve run across while working in Unreal. If I&amp;rsquo;ve missed anything big or particularly useful, I&amp;rsquo;d love to hear about it!&#xA;Note that most of my experience thus far has been in UE versions 4.</description>
    </item>
    <item>
      <title>Fast Chaos Collision Toggling</title>
      <link>https://voithos.io/articles/fast-chaos-collision-toggling/</link>
      <pubDate>Mon, 22 May 2023 23:21:17 -0700</pubDate>
      <guid>https://voithos.io/articles/fast-chaos-collision-toggling/</guid>
      <description>A few weeks ago I investigated an interesting physics-related performance issue, specific to UE5&amp;rsquo;s new Chaos physics engine.&#xA;The code I was working on managed a large number of UStaticMeshComponents (essentially, it&amp;rsquo;s a custom hierarchical level-of-detail system) and would frequently need to toggle visibility and collision shapes per tick. There were some cases where we seemed to be going over our frame budget, so I took a profile via Unreal Insights:</description>
    </item>
  </channel>
</rss>
